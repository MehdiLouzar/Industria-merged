version: '3.8'
services:
  frontend:
    build:
      context: ./Front-End
      dockerfile: Dockerfile
    container_name: zones-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - HOSTNAME=0.0.0.0
    restart: unless-stopped
    volumes:
      - ./Front-End/logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  backend:
    build:
      context: ./Back-End
      dockerfile: Dockerfile
    container_name: zones-backend
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/industria
    restart: unless-stopped
    depends_on:
      - db

  db:
    image: postgis/postgis:16-3.4
    container_name: zones-db
    environment:
      POSTGRES_DB: industria
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./Back-End/db/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"

  nginx:
    image: nginx:alpine
    container_name: zones-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Front-End/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./Front-End/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
